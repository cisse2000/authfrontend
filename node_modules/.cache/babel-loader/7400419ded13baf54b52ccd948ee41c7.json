{"ast":null,"code":"import ApiService from '@/services/ApiService'; // import axios from 'axios'\n\nexport default {\n  name: 'PostSubmit',\n  props: {\n    title: String,\n    btnSubmit: String,\n    id: null\n  },\n\n  mounted() {\n    if (this.id) this.getNote();\n  },\n\n  data: () => ({\n    valid: true,\n    post: {\n      title: '',\n      titleRules: [v => !!v || 'Le titre est requis', v => v && v.length <= 60 || 'Le titre doit être moins de 60 caractères.'],\n      content: '',\n      contentRules: [v => !!v || 'Le contenu est requis'],\n      created_by: '',\n      img: ''\n    },\n    progress: null,\n    alert: {\n      type: 'error',\n      state: false,\n      message: ''\n    }\n  }),\n  methods: {\n    async getNote() {\n      this.$store.commit('setIsLoading', true);\n      let axiosService = new ApiService();\n      await axiosService.findOne(`/posts/${this.id}/`).then(response => {\n        this.$store.state.post = response.data.results;\n        console.log(response.data);\n        this.post.title = response.data.title;\n        this.post.content = response.data.content;\n        this.post.get_image = response.data.get_image;\n        this.post.img = response.data.image;\n        this.post.created_by = response.data.created_by; // console.log(response.data)\n      }).catch(error => {\n        console.log(error.data);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n\n    addFormData(file, onUploadProgress) {\n      let formData = new FormData();\n      formData.append('title', this.post.title);\n      formData.append('content', this.post.content);\n      formData.append('image', file);\n      let apiAxios = new ApiService();\n      return apiAxios.addForm('/posts/', formData, onUploadProgress);\n    },\n\n    updateFormData(onUploadProgress) {\n      let formData = new FormData();\n      formData.append('title', this.post.title);\n      formData.append('content', this.post.content);\n\n      if (this.selectImage()) {\n        formData.append('image', this.selectImage());\n      }\n\n      let apiAxios = new ApiService();\n      return apiAxios.updateForm(`/posts/${this.id}/`, formData, this.id, onUploadProgress);\n    },\n\n    selectImage() {\n      return this.post.image;\n    },\n\n    register() {\n      this.progress = 0;\n\n      if (this.id) {\n        this.updateFormData(this.post.image, event => {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        }).then(response => {\n          console.log(\"Formulaire ajouté avec succes\");\n          this.$router.push({\n            'name': 'posts'\n          });\n          this.progress = null;\n        }).catch(error => {\n          this.progress = 0;\n          console.log(\"Erreur de formulaire\");\n        });\n      } else {\n        this.addFormData(this.post.image, event => {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        }).then(response => {\n          console.log(\"Formulaire ajouté avec succes\");\n          this.$router.push({\n            'name': 'posts'\n          });\n          this.progress = null;\n        }).catch(error => {\n          this.progress = 0;\n          console.log(\"Erreur de formulaire\");\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkGA,+C,CACA;;AAGA;EACAA,kBADA;EAEAC;IACAC,aADA;IAEAC,iBAFA;IAGAC;EAHA,CAFA;;EAOAC;IACA;EACA,CATA;;EAWAC;IACAC,WADA;IAEAC;MACAN,SADA;MAEAO,aACAC,iCADA,EAEAA,wEAFA,CAFA;MAOAC,WAPA;MAQAC,eACAF,mCADA,CARA;MAYAG,cAZA;MAaAC;IAbA,CAFA;IAkBAC,cAlBA;IAoBAC;MACAC,aADA;MAEAC,YAFA;MAGAC;IAHA;EApBA,EAXA;EAuCAC;IAEA;MACA;MAEA;MACA,mBACAC,OADA,CACA,oBADA,EAEAC,IAFA,CAEAC;QACA;QACAC;QAEA;QACA;QACA;QACA;QACA,gDARA,CASA;MAEA,CAbA,EAcAC,KAdA,CAcAC;QACAF;MACA,CAhBA;MAkBA;IAEA,CA1BA;;IA4BAG;MACA;MACAC;MACAA;MACAA;MAEA;MAEA;IACA,CArCA;;IAuCAC;MACA;MACAD;MACAA;;MAEA;QAEAA;MACA;;MAEA;MAEA;IACA,CApDA;;IAsDAE;MACA;IACA,CAxDA;;IA0DAC;MACA;;MAEA;QAEA;UACA;QACA,CAFA,EAGAT,IAHA,CAGAC;UACAC;UACA;YAAA;UAAA;UACA;QACA,CAPA,EAQAC,KARA,CAQAC;UACA;UACAF;QACA,CAXA;MAaA,CAfA,MAeA;QAEA;UACA;QACA,CAFA,EAGAF,IAHA,CAGAC;UACAC;UACA;YAAA;UAAA;UACA;QACA,CAPA,EAQAC,KARA,CAQAC;UACA;UACAF;QACA,CAXA;MAaA;IAGA;;EA9FA;AAvCA","names":["name","props","title","btnSubmit","id","mounted","data","valid","post","titleRules","v","content","contentRules","created_by","img","progress","alert","type","state","message","methods","findOne","then","response","console","catch","error","addFormData","formData","updateFormData","selectImage","register"],"sourceRoot":"src/components","sources":["PostSubmit.vue"],"sourcesContent":["<template>\n    <div id=\"file\">\n        <v-row class=\"d-flex justify-content\">\n                <v-col cols=\"8\" md=\"6\" >\n                    <v-card class=\"pa-6\">\n                        <h1>{{title}}</h1>\n                        <template>\n\n                            <v-form\n                                ref=\"form\"\n                                v-model=\"valid\"\n                                lazy-validation\n                            >\n\n\n                                <div class=\"mb-3\">\n\n                                    <v-text-field\n                                    v-model=\"post.title\"\n                                    :rules=\"post.titleRules\"\n                                    label=\"Titre\"\n                                    required\n                                    ></v-text-field>\n                                </div>  \n                                \n                                <v-file-input\n                                    counter\n                                    v-model=\"post.image\"\n                                    show-size\n                                    truncate-length=\"36\"\n                                    label=\"Image\"\n                                    @click=\"selectImage\"\n                                    \n                                ></v-file-input>\n\n                                <div class=\"mb-3\">\n                                    \n                                    <v-textarea\n                                    v-model=\"post.content\"\n                                    :rules=\"post.contentRules\"\n                                    required\n                                    label=\"Un petit commentaire\"\n                                    ></v-textarea>\n                            \n                                </div>                            \n\n\n                                <!-- <div class=\"progress mb-6\">\n                                \n                                    <progress class=\"is-primary progress\" :value=post.progress max=\"100\">{{document.progress}}%</progress>\n                                </div> -->\n                                <v-btn\n                                :disabled=\"!valid\"\n                                color=\"success\"\n                                class=\"mr-4\"\n                                @click=\"register\"\n                                >\n                                {{btnSubmit}}\n                                </v-btn>\n\n                                <div class=\"notification mt-6\"> {{id}}</div>\n                                \n                            </v-form>\n                        </template>\n                    </v-card>\n                </v-col>\n\n                <v-col cols=\"4\" md=\"6\" >\n                    <h1>Image</h1>\n                    <template>\n\n\n                        <v-card\n                        class=\" ma-5\"\n                        max-width=\"400\"\n                    >\n                        \n                        <v-img\n                            class=\"white--text align-end\"\n                            height=\"200px\"\n                            :src=\"post.img\"\n                            >\n                            <v-card-title>{{post.title}}</v-card-title>\n                        </v-img>\n\n                        <v-card-subtitle class=\"pb-0\">\n                                Fait par - {{ post.created_by.last_name }}\n                        </v-card-subtitle>\n\n\n                    </v-card>\n                    </template>\n                </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport ApiService from '@/services/ApiService'\n// import axios from 'axios'\n\n\n    export default {\n        name: 'PostSubmit',\n        props: {\n            title: String,\n            btnSubmit: String,\n            id: null\n        },\n        mounted() {\n            if(this.id) this.getNote()\n        },\n       \n        data:() => ({\n            valid: true,\n            post: {\n                title: '',\n                titleRules: [\n                    v => !!v || 'Le titre est requis',\n                    v => (v && v.length <= 60) || 'Le titre doit être moins de 60 caractères.',\n                ],\n\n                content: '',\n                contentRules: [\n                    v => !!v || 'Le contenu est requis',\n                ],\n                \n                created_by: '',    \n                img: '',\n            },\n\n            progress: null,\n\n            alert: {\n                type: 'error',\n                state: false,\n                message: ''\n            }\n        }),\n       \n\n        methods: {\n\n            async getNote(){\n                this.$store.commit('setIsLoading', true);\n\n                let axiosService = new ApiService()\n                await axiosService\n                .findOne(`/posts/${this.id}/`)\n                .then(response => {  \n                    this.$store.state.post = response.data.results\n                    console.log(response.data)\n\n                    this.post.title = response.data.title\n                    this.post.content = response.data.content\n                    this.post.get_image = response.data.get_image\n                    this.post.img = response.data.image\n                    this.post.created_by = response.data.created_by\n                    // console.log(response.data)\n                    \n                })\n                .catch(error => {\n                    console.log(error.data);\n                });\n\n                this.$store.commit('setIsLoading', false);\n               \n            },\n\n            addFormData(file, onUploadProgress){\n                let formData = new FormData()\n                formData.append('title', this.post.title)\n                formData.append('content', this.post.content)\n                formData.append('image', file)\n\n                let apiAxios = new ApiService()\n\n                return apiAxios.addForm('/posts/', formData, onUploadProgress)\n            },\n\n            updateFormData( onUploadProgress){\n                let formData = new FormData()\n                formData.append('title', this.post.title)\n                formData.append('content', this.post.content)\n                \n                if(this.selectImage()){\n\n                    formData.append('image', this.selectImage())\n                }\n                \n                let apiAxios = new ApiService()\n\n                return apiAxios.updateForm(`/posts/${this.id}/`, formData, this.id, onUploadProgress)\n            },\n\n            selectImage(){\n                return this.post.image \n            },\n            \n            register(){\n                this.progress = 0\n\n                if(this.id){\n\n                    this.updateFormData(this.post.image, event => {\n                    this.progress = Math.round((100 * event.loaded) / event.total)\n                    })\n                    .then(response => {\n                        console.log(\"Formulaire ajouté avec succes\")\n                        this.$router.push({'name': 'posts'})\n                        this.progress = null\n                    })\n                    .catch(error => {\n                        this.progress = 0 \n                        console.log(\"Erreur de formulaire\")\n                    })    \n\n                } else {\n\n                    this.addFormData(this.post.image, event => {\n                    this.progress = Math.round((100 * event.loaded) / event.total)\n                    })\n                    .then(response => {\n                        console.log(\"Formulaire ajouté avec succes\")\n                        this.$router.push({'name': 'posts'})\n                        this.progress = null\n                    })\n                    .catch(error => {\n                        this.progress = 0 \n                        console.log(\"Erreur de formulaire\")\n                    })    \n                    \n                }\n\n                \n            },\n        }\n        \n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}