{"ast":null,"code":"import ApiService from '@/services/ClientApiService';\nexport default {\n  name: 'Register',\n\n  data() {\n    return {\n      valid: true,\n      user: {\n        first_name: '',\n        first_nameRules: [v => !!v || 'Prénom est requis', v => v && v.length <= 10 || 'Prénom doit être moins de 10 caractères.'],\n        last_name: '',\n        last_nameRules: [v => !!v || 'Nom est requis', v => v && v.length <= 10 || 'Nom doit être moins de 10 caractères.'],\n        username: '',\n        usernameRules: [v => !!v || \"Nom d'utilisateur est requis\", v => v && v.length <= 10 || \"Nom d'utilisateur doit être moins de 5 caractères.\"],\n        email: '',\n        emailRules: [v => !!v || \"Email est requis\", v => v && v.length <= 30 || \"Nom d'utilisateur doit être moins de 30 caractères.\"],\n        password: '',\n        passwordRules: [v => !!v || \"Mot de passe est requis\"],\n        re_password: '',\n        photo: ''\n      },\n      alert: {\n        type: 'error',\n        state: false,\n        message: ''\n      }\n    };\n  },\n\n  methods: {\n    async register() {\n      this.$store.commit('setIsLoading', true);\n      let service = new ApiService();\n      await service.add('/users/', this.user).then(response => {\n        console.log(response.data, \"Bien ajouté\");\n        this.$router.push({\n          name: 'login'\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n\n    validate() {\n      this.$refs.form.validate();\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0GA;AAEA;EACAA,gBADA;;EAEAC;IACA;MACAC,WADA;MAGAC;QACAC,cADA;QAEAC,kBACAC,+BADA,EAEAA,sEAFA,CAFA;QAOAC,aAPA;QAQAC,iBACAF,4BADA,EAEAA,mEAFA,CARA;QAYAG,YAZA;QAaAC,gBACAJ,0CADA,EAEAA,gFAFA,CAbA;QAiBAK,SAjBA;QAkBAC,aACAN,8BADA,EAEAA,iFAFA,CAlBA;QAsBAO,YAtBA;QAuBAC,gBACAR,qCADA,CAvBA;QA2BAS,eA3BA;QA4BAC;MA5BA,CAHA;MAiCAC;QACAC,aADA;QAEAC,YAFA;QAGAC;MAHA;IAjCA;EAuCA,CA1CA;;EA2CAC;IACA;MACA;MAEA;MACA,wCACAC,IADA,CACAC;QACAC;QACA;UAAAxB;QAAA;MACA,CAJA,EAIAyB,KAJA,CAIAC;QACAF;MACA,CANA;MAQA;IACA,CAdA;;IAgBAG;MACA;IACA,CAlBA;;IAmBAC;MACA;IACA,CArBA;;IAsBAC;MACA;IACA;;EAxBA;AA3CA","names":["name","data","valid","user","first_name","first_nameRules","v","last_name","last_nameRules","username","usernameRules","email","emailRules","password","passwordRules","re_password","photo","alert","type","state","message","methods","then","response","console","catch","error","validate","reset","resetValidation"],"sourceRoot":"src/views/user","sources":["RegisterView.vue"],"sourcesContent":["<template>\n    <div id=\"register\">\n    <v-container>\n        <v-row class=\"d-flex justify-center\">\n            <v-col cols=\"12\" md=\"6\" lg=\"5\">\n            <v-card class=\"pa-6\">\n                <h2 class=\"text-center\">Enregistrement</h2>\n\n                <template>\n                  <v-form\n                    ref=\"form\"\n                    v-model=\"valid\"\n                    lazy-validation\n                  >\n                    <v-text-field\n                      v-model=\"user.username\"\n                      :counter=\"5\"\n                      :rules=\"user.usernameRules\"\n                      label=\"Nom d'utilisateur\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"user.first_name\"\n                      :counter=\"10\"\n                      :rules=\"user.first_nameRules\"\n                      label=\"Prénom\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"user.last_name\"\n                      :counter=\"10\"\n                      :rules=\"user.last_nameRules\"\n                      label=\"Nom\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"user.email\"\n                      :rules=\"user.emailRules\"\n                      label=\"E-mail\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"user.password\"\n                      :counter=\"20\"\n                      :rules=\"user.passwordRules\"\n                      label=\"Mot de passe\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"user.re_password\"\n                      :counter=\"8\"\n                      :rules=\"user.re_passwordRules\"\n                      label=\"Confirmation\"\n                      required\n                    ></v-text-field>\n\n                    <v-file-input\n                      counter\n                      \n                      show-size\n                      truncate-length=\"36\"\n                      label=\"Selectionner une image\"\n                      \n                    ></v-file-input>\n\n\n                    <v-btn\n                      :disabled=\"!valid\"\n                      color=\"success\"\n                      class=\"mr-4\"\n                      @click=\"register\"\n                    >\n                      Ajouter\n                    </v-btn>\n\n                    <v-btn\n                      color=\"error\"\n                      class=\"mr-4\"\n                      @click=\"reset\"\n                    >\n                      Reset Form\n                    </v-btn>\n\n                    <v-btn\n                      color=\"warning\"\n                      @click=\"resetValidation\"\n                    >\n                      Reset Validation\n                    </v-btn>\n                  </v-form>\n                </template>\n            </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n\n    </div>\n</template>\n\n<script>\n\nimport ApiService from '@/services/ClientApiService';\n\n    export default {\n        name:'Register',\n        data(){\n          return {\n            valid: true,\n\n            user: {\n              first_name: '',\n              first_nameRules: [\n                v => !!v || 'Prénom est requis',\n                v => (v && v.length <= 10) || 'Prénom doit être moins de 10 caractères.',\n              ],\n\n              last_name: '',\n              last_nameRules: [\n                v => !!v || 'Nom est requis',\n                v => (v && v.length <= 10) || 'Nom doit être moins de 10 caractères.',\n              ],\n              username: '',\n              usernameRules: [\n                v => !!v || \"Nom d'utilisateur est requis\",\n                v => (v && v.length <= 10) || \"Nom d'utilisateur doit être moins de 5 caractères.\",\n              ],\n              email:'',\n              emailRules: [\n                v => !!v || \"Email est requis\",\n                v => (v && v.length <= 30) || \"Nom d'utilisateur doit être moins de 30 caractères.\",\n              ],\n              password: '',\n              passwordRules: [\n                v => !!v || \"Mot de passe est requis\",\n                \n              ],\n              re_password:'',\n              photo:'',\n            },\n            alert: {\n              type: 'error',\n              state: false,\n              message: ''\n          }\n          }\n        },\n        methods: {\n          async register(){\n            this.$store.commit('setIsLoading', true)\n\n            let service = new ApiService()\n             await service.add('/users/',this.user)\n            .then(response => {\n              console.log(response.data, \"Bien ajouté\")\n              this.$router.push({ name: 'login'})\n            }).catch(error => {\n              console.log(error)\n            })\n\n            this.$store.commit('setIsLoading', false)\n          },\n\n          validate () {\n            this.$refs.form.validate()\n          },\n          reset () {\n            this.$refs.form.reset()\n          },\n          resetValidation () {\n            this.$refs.form.resetValidation()\n          },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}