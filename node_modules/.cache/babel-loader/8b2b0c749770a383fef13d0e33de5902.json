{"ast":null,"code":"import ApiService from '@/services/ApiService';\nexport default {\n  name: 'Login',\n\n  data() {\n    return {\n      valid: true,\n      user: {\n        username: '',\n        usernameRules: [v => !!v || \"Nom d'utilisateur est requis\", v => v && v.length <= 30 || \"Nom d'utilisateur doit être moins de 30 caractères.\"],\n        password: '',\n        passwordRules: [v => !!v || \"Mot de passe est requis.\"]\n      },\n      alert: {\n        type: 'error',\n        state: false,\n        message: ''\n      }\n    };\n  },\n\n  methods: {\n    login() {\n      this.$store.dispatch('userLogin', {\n        username: this.user.username,\n        password: this.user.password\n      }).then(() => {\n        localStorage.setItem('accessToken', this.$store.state.accessToken);\n        localStorage.setItem('refreshToken', this.$store.state.refreshToken); //Récuperation des infos de user\n\n        let service = new ApiService();\n        service.find('/users/me/').then(response => {\n          this.$store.state.user = response.data;\n          this.$router.push({\n            'name': 'profile',\n            params: {\n              'user': response.data.username\n            }\n          });\n        }).catch(error => {\n          console.log(error.data, \"Error \");\n        });\n      }).catch(error => {\n        console.log(error);\n      }); // this.$store.commit('setIsLoading', false)\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsDA;AACA;EAEAA,aAFA;;EAGAC;IACA;MACAC,WADA;MAIAC;QAEAC,YAFA;QAGAC,gBACAC,0CADA,EAEAA,iFAFA,CAHA;QAQAC,YARA;QASAC,gBACAF,sCADA;MATA,CAJA;MAmBAG;QACAC,aADA;QAEAC,YAFA;QAGAC;MAHA;IAnBA;EAyBA,CA7BA;;EA8BAC;IACAC;MAEA;QACAV,4BADA;QAEAG;MAFA,GAIAQ,IAJA,CAIA;QACAC;QACAA,qEAFA,CAIA;;QAEA;QACAC,2BACAF,IADA,CACAG;UACA;UAEA;YAAA;YAAAC;cAAA;YAAA;UAAA;QAEA,CANA,EAMAC,KANA,CAMAC;UACAC;QACA,CARA;MAUA,CArBA,EAsBAF,KAtBA,CAsBAC;QACAC;MACA,CAxBA,EAFA,CA4BA;IAEA;;EA/BA;AA9BA","names":["name","data","valid","user","username","usernameRules","v","password","passwordRules","alert","type","state","message","methods","login","then","localStorage","service","response","params","catch","error","console"],"sourceRoot":"src/views/user","sources":["LoginView.vue"],"sourcesContent":["<template>\n    <div id=\"login\">\n        <v-container>\n            <v-row class=\"d-flex justify-center\">\n                <v-col cols=\"12\" md=\"6\" lg=\"5\">\n                <v-card class=\"pa-6\">\n                    <h1 class=\"text-center\">Authentification</h1>\n                    <template>\n                    <v-form\n                        ref=\"form\"\n                        v-model=\"valid\"\n                        lazy-validation\n                    >\n                        <v-text-field\n                        v-model=\"user.username\"\n                        :rules=\"user.usernameRules\"\n                        label=\"Nom d'utilisateur\"\n                        required\n                        ></v-text-field>\n\n\n                        <v-text-field\n        \n                        :rules=\"user.passwordRules\"\n                        v-model=\"user.password\"\n                        label=\"Mot de passe\"\n                        required\n                        ></v-text-field>\n\n\n                        <v-btn\n                        :disabled=\"!valid\"\n                        color=\"success\"\n                        class=\"mr-4\"\n                        @click=\"login\"\n                        >\n                        Connexion\n                        </v-btn>\n\n                    </v-form>\n                    <div class=\" ma-4 d-flex justify-space-between \">\n                        <span><router-link :to=\"{name: 'register'}\">Inscription</router-link></span>\n                        <span><router-link :to=\"{name: 'reset_password'}\">Mot de passe oublié</router-link></span>\n                        <span><router-link :to=\"{name: 'user_resend_activation'}\">Renvoyer le mail d'activation</router-link></span>\n                    </div>\n                    </template>\n                </v-card>\n                </v-col>\n            </v-row>\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport ApiService from '@/services/ApiService'\n    export default {\n        \n        name: 'Login',\n        data(){\n            return {\n                valid: true,\n            \n                \n                user: {\n                \n                    username: '',\n                    usernameRules: [\n                        v => !!v || \"Nom d'utilisateur est requis\",\n                        v => (v && v.length <= 30 ) || \"Nom d'utilisateur doit être moins de 30 caractères.\",\n                    ],\n                    \n                    password: '',\n                    passwordRules: [\n                        v => !!v || \"Mot de passe est requis.\"\n                    ],\n                \n                },\n                \n                alert: {\n                    type: 'error',\n                    state: false,\n                    message: ''\n                }\n            }\n        },\n        methods:{\n            login(){\n\n                this.$store.dispatch('userLogin',{\n                    username: this.user.username,\n                    password: this.user.password\n                })\n                .then(() => {\n                    localStorage.setItem('accessToken', this.$store.state.accessToken)\n                    localStorage.setItem('refreshToken', this.$store.state.refreshToken)\n\n                    //Récuperation des infos de user\n\n                    let service = new ApiService()\n                    service.find('/users/me/')\n                    .then(response => {\n                        this.$store.state.user = response.data\n                        \n                        this.$router.push({'name': 'profile', params:{'user': response.data.username}})\n                        \n                    }).catch(error => {\n                        console.log(error.data,\"Error \")\n                    })\n                    \n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            \n                // this.$store.commit('setIsLoading', false)\n                \n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}